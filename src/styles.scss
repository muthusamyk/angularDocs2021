// /**
//   when we use custom theme instead of indico pink or some inbuild theme we get below code and use it off as it is like ...
// */

// // Custom Theming for Angular Material
// // For more information: https://material.angular.io/guide/theming
// @use '~@angular/material'as mat;
// // Plus imports for other components in your app.

// // Include the common styles for Angular Material. We include this here so that you only
// // have to load a single css file for Angular Material in your app.
// // Be sure that you only ever include this mixin once!
// @include mat.core();

// // Define the palettes for your theme using the Material Design palettes available in palette.scss
// // (imported above). For each palette, you can optionally specify a default, lighter, and darker
// // hue. Available color palettes: https://material.io/design/color/

// $angularUILatest-primary: mat.define-palette(mat.$indigo-palette);
// $angularUILatest-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// // The warn palette is optional (defaults to red).
// $angularUILatest-warn: mat.define-palette(mat.$red-palette);

// // Create the theme object. A theme consists of configurations for individual
// // theming systems such as "color" or "typography".
// $angularUILatest-theme: mat.define-light-theme((
//     color: (
//       primary: $angularUILatest-primary,
//       accent: $angularUILatest-accent,
//       warn: $angularUILatest-warn,
//     )
//   ));

// // Include theme styles for core and each component used in your app.
// // Alternatively, you can import and @include the theme mixins for each component
// // that you are using.
// @include mat.all-component-themes($angularUILatest-theme);

// /* You can add global styles to this file, and also import other style files */

// html,
// body {
//   height: 100%;
// }

// body {
//   margin: 0;
//   font-family: Roboto, "Helvetica Neue", sans-serif;
// }



// /**
//   when we use custom theme instead of indico pink or some inbuild theme 
//   But., also we need to change inbuild theme colors change as its we have in our app by using below code
//   By including this '../node_modules/@angular/material/theming' is mandatory to change color code
// */

// @import '../node_modules/@angular/material/theming';

// @include mat-core();

// $my-primary-brand: (
//     50: #ffffff,
//     100: #dde6f3,
//     200: #b4c9e4,
//     300: #7fa3d1,
//     400: #6992c9,
//     500: blue,
//     600: #eaf0f7,
//     700: purple,
//     800: #305687,
//     900: #284770,
//     A100: #ffffff,
//     A200: #dde6f3,
//     A400: #6992c9,
//     A700: #38649d,
//     contrast: (
//         50: $black-87-opacity,
//         100: $black-87-opacity,
//         200: $black-87-opacity,
//         300: $black-87-opacity,
//         400: $black-87-opacity,
//         500: white,
//         600: white,
//         700: white,
//         800: white,
//         900: white,
//         A100: $black-87-opacity,
//         A200: $black-87-opacity,
//         A400: $black-87-opacity,
//         A700: white,
//     )
// );

// $my-secondary-brand: (
//     50: #ffffff,
//     100: #fff7f4,
//     200: #fecdbd,
//     300: #fc9977,
//     400: green,
//     500: #fc8259,
//     600: #fa551d,
//     700: violet,
//     800: #d63a04,
//     900: #b83204,
//     A100: #ffffff,
//     A200: #fff7f4,
//     A400: #fc8259,
//     A700: #f44205,
//     contrast: (
//         50: $black-87-opacity,
//         100: $black-87-opacity,
//         200: $black-87-opacity,
//         300: $black-87-opacity,
//         400: $black-87-opacity,
//         500: white,
//         600: white,
//         700: white,
//         800: white,
//         900: white,
//         A100: $black-87-opacity,
//         A200: $black-87-opacity,
//         A400: $black-87-opacity,
//         A700: white,
//     )
// );

// $custom-light-primary: mat-palette($my-primary-brand, 500);
// $custom-light-accent: mat-palette($my-secondary-brand, 400);
// $custom-light-warn: mat-palette($mat-red, 200);

// $custom-dark-primary: mat-palette($my-primary-brand, 700);
// $custom-dark-accent: mat-palette($my-secondary-brand, 700);
// $custom-dark-warn: mat-palette($mat-red, 200);

// $custom-light-theme: mat-light-theme($custom-light-primary, $custom-light-accent, $custom-light-warn);
// $custom-dark-theme: mat-light-theme($custom-dark-primary, $custom-dark-accent, $custom-dark-warn);

// @include angular-material-theme($custom-light-theme);

// .my-dark-theme {
//   @include angular-material-theme($custom-dark-theme);
// }



// /**
//   we can use switch theme as like dark theme and light theme by using below code
// */

// @use '~@angular/material'as mat;

// @include mat.core();

// // Define a light theme
// $light-primary: mat.define-palette(mat.$indigo-palette, 500);
// $light-accent: mat.define-palette(mat.$pink-palette);
// $light-theme: mat.define-light-theme((color: (primary: $light-primary,
//       accent: $light-accent,
//     )));

// // Define a dark theme
// $dark-primary: mat.define-palette(mat.$pink-palette);
// $dark-accent: mat.define-palette(mat.$blue-gray-palette);
// $dark-theme: mat.define-dark-theme((color: (primary: $dark-primary,
//       accent: $dark-accent,
//     )));

// // Apply the dark theme by default
// @include mat.core-theme($dark-theme);
// @include mat.button-theme($dark-theme);

// // Apply the light theme only when the `.my-light-theme` CSS class is applied
// // to an ancestor element of the components (such as `body`).
// .my-light-theme {
//   @include mat.core-color($light-theme);
//   @include mat.button-color($light-theme);
// }



/**
* Generated theme by Material Theme Generator
* https://materialtheme.arcsine.dev
* Fork at: https://materialtheme.arcsine.dev/?c=YHBhbGV0dGU$YHByaW1hcnk$YF48I2ZiNzAwMCIsIj9lcjwjZmI4NTI2IiwiO2VyPCNmY2EyNTl$LCIlPmBePCMwMDU1OTIiLCI~ZXI8IzI2NmVhMiIsIjtlcjwjNTk5MGI4fiwid2Fybj5gXjwjZmEzZTNlIiwiP2VyPCNmYjViNWIiLCI7ZXI8I2ZlZWJlYn4sIj9UZXh0PCM0MTRhNTQiLCI~PTwjZjRmNWY1IiwiO1RleHQ8IzIwMmEzNiIsIjs9PCNmYWZhZmF$LCJmb250cz5bYEA8KC00fixgQDwoLTN$LGBAPCgtMn4sYEA8KC0xfixgQDxoZWFkbGluZX4sYEA8dGl0bGV$LGBAPHN1YiktMn4sYEA8c3ViKS0xfixgQDxib2R5LTIiLCJsaW5lSGVpZ2h0PjIwLCJzcGFjaW5nPm51bGx9LGBAPGJvZHktMX4sYEA8YnV0dG9ufixgQDxjYXB0aW9ufixgQDxpbnB1dCIsInNpemU$bnVsbH1dLCJpY29uczxGaWxsZWQiLCI~bmVzcz5mYWxzZSwidmVyc2lvbj4xMn0=
*/

@use '~@angular/material'as mat;

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.

$fontConfig: (display-4: mat.define-typography-level(112px, 112px, 300, 'Roboto', -0.0134em),
  display-3: mat.define-typography-level(56px, 56px, 400, 'Roboto', -0.0089em),
  display-2: mat.define-typography-level(45px, 48px, 400, 'Roboto', 0.0000em),
  display-1: mat.define-typography-level(34px, 40px, 400, 'Roboto', 0.0074em),
  headline: mat.define-typography-level(24px, 32px, 400, 'Roboto', 0.0000em),
  title: mat.define-typography-level(20px, 32px, 500, 'Roboto', 0.0075em),
  subheading-2: mat.define-typography-level(16px, 28px, 400, 'Roboto', 0.0094em),
  subheading-1: mat.define-typography-level(15px, 24px, 500, 'Roboto', 0.0067em),
  body-2: mat.define-typography-level(14px, 20px, 500, 'Roboto', 0.0000em),
  body-1: mat.define-typography-level(14px, 20px, 400, 'Roboto', 0.0179em),
  button: mat.define-typography-level(14px, 14px, 500, 'Roboto', 0.0893em),
  caption: mat.define-typography-level(12px, 20px, 400, 'Roboto', 0.0333em),
  input: mat.define-typography-level(inherit, 1.125, 400, 'Roboto', 1.5px));

// Foreground Elements

// Light Theme Text
$dark-text: #FFFFFF;
$dark-primary-text: rgba($dark-text, 1);
$dark-accent-text: rgba($dark-primary-text, 0.54);
$dark-disabled-text: rgba($dark-primary-text, 0.38);
$dark-dividers: rgba($dark-primary-text, 0.12);
$dark-focused: rgba($dark-primary-text, 0.12);

$mat-light-theme-foreground: (base: black,
  divider: $dark-dividers,
  dividers: $dark-dividers,
  disabled: $dark-disabled-text,
  disabled-button: rgba($dark-text, 0.26),
  disabled-text: $dark-disabled-text,
  elevation: black,
  secondary-text: $dark-accent-text,
  hint-text: $dark-disabled-text,
  accent-text: $dark-accent-text,
  icon: $dark-accent-text,
  icons: $dark-accent-text,
  text: $dark-primary-text,
  slider-min: $dark-primary-text,
  slider-off: rgba($dark-text, 0.26),
  slider-off-active: $dark-disabled-text,
);

// Dark Theme text
$light-text: #414A54;
$light-primary-text: $light-text;
$light-accent-text: #9A9FA4;
$light-disabled-text: #E8E9EA;
$light-dividers: #dfe3eb;
$light-focused: rgba($light-primary-text, 0.12);

$mat-dark-theme-foreground: (base: $light-text,
  divider: $light-dividers,
  dividers: $light-dividers,
  disabled: $light-disabled-text,
  disabled-button: #9A9FA4,
  disabled-text: $light-disabled-text,
  elevation: black,
  hint-text: $light-disabled-text,
  secondary-text: $light-accent-text,
  accent-text: $light-accent-text,
  icon: $light-text,
  icons: $light-text,
  text: $light-text,
  slider-min: $light-text,
  slider-off: rgba($light-text, 0.3),
  slider-off-active: rgba($light-text, 0.3),
);

// Background config
// Light bg
$light-background: #f4f5f5;
$light-bg-darker-5: darken($light-background, 5%);
$light-bg-darker-10: darken($light-background, 10%);
$light-bg-darker-20: darken($light-background, 20%);
$light-bg-darker-30: darken($light-background, 30%);
$light-bg-lighter-5: lighten($light-background, 5%);
$dark-bg-tooltip: lighten(#fafafa, 20%);
$dark-bg-alpha-4: rgba(#fafafa, 0.04);
$dark-bg-alpha-12: rgba(#fafafa, 0.12);

$mat-light-theme-background: (background: $light-background,
  status-bar: $light-bg-darker-20,
  app-bar: $light-bg-darker-5,
  hover: $dark-bg-alpha-4,
  card: $light-bg-lighter-5,
  dialog: $light-bg-lighter-5,
  tooltip: $dark-bg-tooltip,
  disabled-button: $dark-bg-alpha-12,
  raised-button: $light-bg-lighter-5,
  focused-button: $dark-focused,
  selected-button: $light-bg-darker-20,
  selected-disabled-button: $light-bg-darker-30,
  disabled-button-toggle: $light-bg-darker-10,
  unselected-chip: $light-bg-darker-10,
  disabled-list-option: $light-bg-darker-10,
);

// Dark bg
$dark-background: #fafafa;
$dark-bg-lighter-5: lighten($dark-background, 5%);
$dark-bg-lighter-10: lighten($dark-background, 10%);
$dark-bg-lighter-20: lighten($dark-background, 20%);
$dark-bg-lighter-30: lighten($dark-background, 30%);
$light-bg-alpha-4: rgba(#f4f5f5, 0.04);
$light-bg-alpha-12: rgba(#f4f5f5, 0.12);

// Background palette for dark themes.
$mat-dark-theme-background: (background: $dark-background,
  status-bar: $dark-bg-lighter-20,
  app-bar: $dark-bg-lighter-5,
  hover: $light-bg-alpha-4,
  card: $dark-bg-lighter-5,
  dialog: $dark-bg-lighter-5,
  tooltip: $dark-bg-lighter-20,
  disabled-button: $light-bg-alpha-12,
  raised-button: $dark-bg-lighter-5,
  focused-button: $light-focused,
  selected-button: $dark-bg-lighter-20,
  selected-disabled-button: $dark-bg-lighter-30,
  disabled-button-toggle: $dark-bg-lighter-10,
  unselected-chip: $dark-bg-lighter-20,
  disabled-list-option: $dark-bg-lighter-10,
);

// Compute font config
@include mat.core($fontConfig);

// Theme Config

body {
  --primary-color: #fb7000;
  --primary-lighter-color: #fb8526;
  --primary-darker-color: #fca259;
  --text-primary-color: #{$dark-primary-text};
  --text-primary-lighter-color: #{$dark-primary-text};
  --text-primary-darker-color: #{$dark-primary-text};
}

$mat-primary: (main: #fb7000,
  lighter: #fb8526,
  darker: #fca259,
  200: #fb7000, // For slide toggle,
  contrast : (main: $dark-primary-text,
    lighter: $dark-primary-text,
    darker: $dark-primary-text,
  ));
$theme-primary: mat.define-palette($mat-primary, main, lighter, darker);


body {
  --accent-color: #005592;
  --accent-lighter-color: #266ea2;
  --accent-darker-color: #5990b8;
  --text-accent-color: #{$dark-primary-text};
  --text-accent-lighter-color: #{$dark-primary-text};
  --text-accent-darker-color: #{$dark-primary-text};
}

$mat-accent: (main: #005592,
  lighter: #266ea2,
  darker: #5990b8,
  200: #005592, // For slide toggle,
  contrast : (main: $dark-primary-text,
    lighter: $dark-primary-text,
    darker: $dark-primary-text,
  ));
$theme-accent: mat.define-palette($mat-accent, main, lighter, darker);


body {
  --warn-color: #fa3e3e;
  --warn-lighter-color: #fb5b5b;
  --warn-darker-color: #feebeb;
  --text-warn-color: #{$dark-primary-text};
  --text-warn-lighter-color: #{$dark-primary-text};
  --text-warn-darker-color: #{$dark-primary-text};
}

$mat-warn: (main: #fa3e3e,
  lighter: #fb5b5b,
  darker: #feebeb,
  200: #fa3e3e, // For slide toggle,
  contrast : (main: $dark-primary-text,
    lighter: $dark-primary-text,
    darker: $dark-primary-text,
  ));
$theme-warn: mat.define-palette($mat-warn, main, lighter, darker);
;

$theme: (primary: $theme-primary,
  accent: $theme-accent,
  warn: $theme-warn,
  is-dark: true,
  foreground: $mat-dark-theme-foreground,
  background: $mat-dark-theme-background,
);
$altTheme: (primary: $theme-primary,
  accent: $theme-accent,
  warn: $theme-warn,
  is-dark: false,
  foreground: $mat-light-theme-foreground,
  background: $mat-light-theme-background,
);

// Theme Init
@include mat.all-component-themes($theme);

.theme-alternate {
  @include mat.all-component-themes($altTheme);
}
